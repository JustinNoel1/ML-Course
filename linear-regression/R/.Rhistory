while((ix < nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$tpr_fpr_matrix(5)
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
print(head(df))
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 2
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix < nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
matix = 1
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
print(head(df))
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix < nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$tpr_fpr_matrix(5)
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix < nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$tpr_fpr_matrix(5)
log_roc$tpr_fpr_matrix()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$tpr_fpr_matrix()
m = log_roc$tpr_fpr_matrix()
m[5000,]
m[8000,]
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = better_tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = better_tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix(num_data_points)
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
n = log_roc$better_tpr_fpr_matrix()
head(n)
log_roc$print_graph()
better_print_graph = function() {
mat = better_tpr_fpr_matrix()
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$better_print_graph()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
better_print_graph = function() {
mat = better_tpr_fpr_matrix()
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix()
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
m = log_roc$tpr_fpr_matrix()
m = log_roc$tpr_fpr_matrix()
m[5000,]
n = log_roc$better_tpr_fpr_matrix()
head(n)
log_roc$better_print_graph()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
better_print_graph = function() {
mat = as.matrix(select(df, fpr, tpr))
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix()
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$better_print_graph()
ggplot(aes(x=n[,1],y=n[,2])) + geom_line()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
better_print_graph = function() {
mat = matrix(select(df, fpr, tpr))
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix()
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
m = log_roc$tpr_fpr_matrix()
m = log_roc$tpr_fpr_matrix()
m[5000,]
n = log_roc$better_tpr_fpr_matrix()
head(n)
ggplot(aes(x=n[,1],y=n[,2])) + geom_line()
type(n)
class(n)
class(n[,1])
ggplot(data = n, aes(x=fpr,y=tpr)) + geom_line()
ggplot(data = as.tibble(n), aes(x=fpr,y=tpr)) + geom_line()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
better_print_graph = function() {
ggplot(data = df, aes(x=fpr, y = tpr)) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix()
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[ix-1,1]-mat[ix,1])
area = area + 0.5 * dx * (mat[ix-1,2]+mat[ix,2])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$better_print_graph()
log_roc$AUC()
roc_object = function(probs, labels) {
roc_generator = ROC_Generator(probs,labels)
num_samples = length(probs)
df = roc_generator$df
tpr_fpr_matrix = function(num_data_points = (num_samples + 1) ) {
mat = matrix(numeric(num_data_points*2), num_data_points, 2)
# build sequence of points to check
s = seq(0,1,length.out=num_data_points)
matix = 1
ix = 2
# For each threshold value find the row in the data frame where the probability first is less than or equal to the threshold value
for(threshold in s) {
while((ix <= nrow(df)) & df[ix,1]>threshold) {
ix = ix+1
}
#load fpr and tpr in from previous row (which is the last below the threshold)
mat[matix,1]=df[[ix-1,4]]
mat[matix,2]=df[[ix-1,5]]
matix = matix+1
}
return(mat)
}
better_tpr_fpr_matrix = function() {
return( as.matrix(select(df, fpr, tpr)))
}
print_graph = function(num_data_points = (num_samples + 1)) {
mat = tpr_fpr_matrix(num_data_points)
ggplot(aes(x=mat[,1], y = mat[,2])) + geom_line()
}
better_print_graph = function() {
ggplot(data = df, aes(x=fpr, y = tpr)) + geom_line()
}
AUC = function(num_data_points = (num_samples+1)) {
mat = better_tpr_fpr_matrix()
area = 0
#Trapezoid method
for(ix in seq(2, nrow(mat))) {
dx = abs(mat[[ix-1,1]]-mat[[ix,1]])
area = area + 0.5 * dx * (mat[[ix-1,2]]+mat[[ix,2]])
}
return(area)
}
environment()
}
log_roc = roc_object(zero_probs, zero_labels)
log_roc$AUC()
